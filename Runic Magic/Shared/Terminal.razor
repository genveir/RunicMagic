@inherits DisposableComponent
@inject PlayerService player

<Xterm @ref="_terminal"
       Options="_options"
       OnFirstRender="@OnFirstRender"
       OnKey="@OnKey" />

@code {
    private Xterm _terminal = null!; // boeee

    private TerminalOptions _options = new TerminalOptions
        {
            CursorBlink = true,
            CursorStyle = CursorStyle.Block,
            DisableStdin = false,
            Rows = 50,
            Columns = 180
        };

    protected override void OnInitialized()
    {
        if (player == null) throw new PlayerNotInjectedException("Terminal was created without player service");

        player.DataAvailable += HandleDataUpdate;
    }

    public async Task HandleDataUpdate(object sender, string data)
    {
        await _terminal.WriteLine(data);
    }

    private void OnFirstRender()
    {
        player.RegisterInput("l");
    }

    private string input = "";
    private async Task OnKey(KeyboardEventArgs args)
    {
        var asChar = args.Key[0];
        if (asChar > 31 && asChar < 127)
        {
            input += asChar;
            await _terminal.Write(args.Key);
        }
        else if (asChar == 13)
        {
            await _terminal.WriteLine("");
            player.RegisterInput(input);
            input = "";
        }
        else if (asChar == '\u007f')
        {
            if (input.Length > 0)
            {
                await _terminal.Write(CURSOR_LEFT + ' ' + CURSOR_LEFT);
                input = input.Substring(0, input.Length - 1);
            }
        }
    }

    private const char ESCAPE = '\u001b';
    private const string CURSOR_LEFT = "\u001b[1D";
}